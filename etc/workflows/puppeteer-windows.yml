name: Puppeteer Windows

##########################################################################

env:
  JAVA_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  GRADLE_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_PACKAGE_REGISTRY_USER: ${{ secrets.GH_PACKAGE_REGISTRY_USER }}
  GH_PACKAGE_REGISTRY_TOKEN: ${{ secrets.GH_PACKAGE_REGISTRY_TOKEN }}
  GRADLE_BUILDCACHE_USER: ci
  GRADLE_BUILDCACHE_PSW: ${{ secrets.GRADLE_BUILDCACHE_PSW }}
  DUO_SECURITY_ADMIN_SKEY: ${{ secrets.DUO_SECURITY_ADMIN_SKEY }}
  DUO_SECURITY_ADMIN_IKEY: ${{ secrets.DUO_SECURITY_ADMIN_IKEY }}
  DUO_SECURITY_UNIVERSAL_PROMPT_SKEY: ${{ secrets.DUO_SECURITY_UNIVERSAL_PROMPT_SKEY }}
  DUO_SECURITY_UNIVERSAL_PROMPT_IKEY: ${{ secrets.DUO_SECURITY_UNIVERSAL_PROMPT_IKEY }}
  DUO_SECURITY_API_HOST: ${{ secrets.DUO_SECURITY_API_HOST }}
  ADFS_HOST: ${{ secrets.ADFS_HOST }}
  ADFS_RELYING_PARTY_ID: ${{ secrets.ADFS_RELYING_PARTY_ID }}
  ADFS_USERNAME: ${{ secrets.ADFS_USERNAME }}
  ADFS_PASSWORD: ${{ secrets.ADFS_PASSWORD }}
  IMGUR_CLIENT_ID: ${{ secrets.IMGUR_CLIENT_ID }}
  TERM: xterm-256color
  JDK_CURRENT: 21
  NODE_CURRENT: '18'
  SCENARIO_REGEX: ".*" # Use this to limit which tests run
  JDK_JAVA_OPTIONS: "-Djava.net.preferIPv4Stack=true -Djava.net.preferIPv4Addresses=true"

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'debug_enabled: Run the build with tmate debugging enabled (true/false)'
        required: false
        default: "false"
  push:
    branches:
      - 'pr-*'
  schedule:
    - cron: '0 3 1 * *'
#  pull_request:
#    types: [ labeled ]
#    branches:
#      - master
#      - '!**.**.**'

##########################################################################

jobs:
  cancel-previous-runs:
    runs-on: windows-latest
    timeout-minutes: 1
    steps:
      - uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

  initialize:
    needs: [cancel-previous-runs]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: "zulu"
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ github.sha }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
#      - name: Gradle Wrapper Validation
#        uses: gradle/wrapper-validation-action@v1
      - name: Initialize
        run: ls ./ci && find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh

  ##########################################################################
  
  puppeteer-scenarios:
    needs: [initialize]
    runs-on: windows-latest
    timeout-minutes: 30
    outputs:
      scenarios255: ${{ steps.get-scenarios255.outputs.scenarios255 }}
      scenarios511: ${{ steps.get-scenarios511.outputs.scenarios511 }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: "zulu"
          cache: 'gradle'
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ github.sha }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Configure Gradle Timeouts
        run: |
          echo systemProp.org.gradle.internal.http.connectionTimeout=60000 >> gradle.properties
          echo systemProp.org.gradle.internal.http.socketTimeout=60000 >> gradle.properties
          echo systemProp.org.gradle.internal.repository.max.retries=10 >> gradle.properties
          echo systemProp.org.gradle.internal.repository.initial.backoff=500 >> gradle.properties
      - name: Download Dependencies
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          shell: bash
          command: ./gradlew --build-cache --configure-on-demand --no-daemon downloadDependencies --parallel --refresh-dependencies --max-workers=8
      - name: Build CAS for Cache
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          shell: bash
          command: ./gradlew :webapp:cas-server-webapp-tomcat:build -DskipNestedConfigMetadataGen=true -x check -x javadoc --configure-on-demand --parallel --no-daemon -DcasModules="core" --no-watch-fs --max-workers=8
      - id: print-scenarios
        run: ./gradlew --build-cache --configure-on-demand --no-daemon -q puppeteerScenarios | jq
      - id: get-scenarios255
        run: echo "scenarios255=$(./gradlew --build-cache --configure-on-demand --no-daemon -q puppeteerScenarios -PpuppeteerScenariosFrom=0 -PpuppeteerScenariosTo=255)" >> $GITHUB_OUTPUT
      - id: get-scenarios511
        run: echo "scenarios511=$(./gradlew --build-cache --configure-on-demand --no-daemon -q puppeteerScenarios -PpuppeteerScenariosFrom=255 -PpuppeteerScenariosTo=511)" >> $GITHUB_OUTPUT

  ##########################################################################
  puppeteer-tests-255:
    runs-on: windows-latest
    needs: [puppeteer-scenarios]
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        scenario: ${{fromJSON(needs.puppeteer-scenarios.outputs.scenarios255)}}
    name: ${{matrix.scenario}}
    timeout-minutes: 25
    steps:
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: "zulu"
          cache: 'gradle'
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ github.sha }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Set up Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_CURRENT }}
          cache: 'npm'
          cache-dependency-path: ./ci/tests/puppeteer/package.json
      - name: Initialize
        run: find ./ci -type f -name "*.sh" -exec chmod +x "{}" \;
#      - name: Setup tmate session
#        uses: mxschmitt/action-tmate@v3
      - name: Run Tests
        shell: bash
        run: |
          export RUNNER_OS=${{ runner.os }}
          echo systemProp.org.gradle.internal.http.connectionTimeout=60000 >> gradle.properties
          echo systemProp.org.gradle.internal.http.socketTimeout=60000 >> gradle.properties
          echo systemProp.org.gradle.internal.repository.max.retries=10 >> gradle.properties
          echo systemProp.org.gradle.internal.repository.initial.backoff=500 >> gradle.properties
          ./ci/tests/puppeteer/run.sh --scenario $PWD/ci/tests/puppeteer/scenarios/${{matrix.scenario}}
  ##########################################################################
  puppeteer-tests-511:
    runs-on: windows-latest
    needs: [puppeteer-scenarios]
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        scenario: ${{fromJSON(needs.puppeteer-scenarios.outputs.scenarios511)}}
    name: ${{matrix.scenario}}
    timeout-minutes: 25
    steps:
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: "zulu"
          cache: 'gradle'
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ github.sha }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Set up Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_CURRENT }}
          cache: 'npm'
          cache-dependency-path: ./ci/tests/puppeteer/package.json
      - name: Initialize
        run: find ./ci -type f -name "*.sh" -exec chmod +x "{}" \;
      #      - name: Setup tmate session
      #        uses: mxschmitt/action-tmate@v3
      - name: Run Tests
        shell: bash
        run: |
          export RUNNER_OS=${{ runner.os }}
          echo systemProp.org.gradle.internal.http.connectionTimeout=60000 >> gradle.properties
          echo systemProp.org.gradle.internal.http.socketTimeout=60000 >> gradle.properties
          echo systemProp.org.gradle.internal.repository.max.retries=10 >> gradle.properties
          echo systemProp.org.gradle.internal.repository.initial.backoff=500 >> gradle.properties
          ./ci/tests/puppeteer/run.sh --scenario $PWD/ci/tests/puppeteer/scenarios/${{matrix.scenario}}
##########################################################################
